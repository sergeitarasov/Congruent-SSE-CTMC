#include <R.h>

void do_derivs_hiclasse6(double *pars, const double *y, double *ydot) {
	double E0 = y[0];
	double E1 = y[1];
	double E2 = y[2];
	double E3 = y[3];
	double E4 = y[4];
	double E5 = y[5];
	double D0 = y[6];
	double D1 = y[7];
	double D2 = y[8];
	double D3 = y[9];
	double D4 = y[10];
	double D5 = y[11];
	
	double la000 = pars[0];
	double la001 = pars[1];
	double la002 = pars[2];
	double la003 = pars[3];
	double la004 = pars[4];
	double la005 = pars[5];
	double la011 = pars[6];
	double la012 = pars[7];
	double la013 = pars[8];
	double la014 = pars[9];
	double la015 = pars[10];
	double la022 = pars[11];
	double la023 = pars[12];
	double la024 = pars[13];
	double la025 = pars[14];
	double la033 = pars[15];
	double la034 = pars[16];
	double la035 = pars[17];
	double la044 = pars[18];
	double la045 = pars[19];
	double la055 = pars[20];
	double la100 = pars[21];
	double la101 = pars[22];
	double la102 = pars[23];
	double la103 = pars[24];
	double la104 = pars[25];
	double la105 = pars[26];
	double la111 = pars[27];
	double la112 = pars[28];
	double la113 = pars[29];
	double la114 = pars[30];
	double la115 = pars[31];
	double la122 = pars[32];
	double la123 = pars[33];
	double la124 = pars[34];
	double la125 = pars[35];
	double la133 = pars[36];
	double la134 = pars[37];
	double la135 = pars[38];
	double la144 = pars[39];
	double la145 = pars[40];
	double la155 = pars[41];
	double la200 = pars[42];
	double la201 = pars[43];
	double la202 = pars[44];
	double la203 = pars[45];
	double la204 = pars[46];
	double la205 = pars[47];
	double la211 = pars[48];
	double la212 = pars[49];
	double la213 = pars[50];
	double la214 = pars[51];
	double la215 = pars[52];
	double la222 = pars[53];
	double la223 = pars[54];
	double la224 = pars[55];
	double la225 = pars[56];
	double la233 = pars[57];
	double la234 = pars[58];
	double la235 = pars[59];
	double la244 = pars[60];
	double la245 = pars[61];
	double la255 = pars[62];
	double la300 = pars[63];
	double la301 = pars[64];
	double la302 = pars[65];
	double la303 = pars[66];
	double la304 = pars[67];
	double la305 = pars[68];
	double la311 = pars[69];
	double la312 = pars[70];
	double la313 = pars[71];
	double la314 = pars[72];
	double la315 = pars[73];
	double la322 = pars[74];
	double la323 = pars[75];
	double la324 = pars[76];
	double la325 = pars[77];
	double la333 = pars[78];
	double la334 = pars[79];
	double la335 = pars[80];
	double la344 = pars[81];
	double la345 = pars[82];
	double la355 = pars[83];
	double la400 = pars[84];
	double la401 = pars[85];
	double la402 = pars[86];
	double la403 = pars[87];
	double la404 = pars[88];
	double la405 = pars[89];
	double la411 = pars[90];
	double la412 = pars[91];
	double la413 = pars[92];
	double la414 = pars[93];
	double la415 = pars[94];
	double la422 = pars[95];
	double la423 = pars[96];
	double la424 = pars[97];
	double la425 = pars[98];
	double la433 = pars[99];
	double la434 = pars[100];
	double la435 = pars[101];
	double la444 = pars[102];
	double la445 = pars[103];
	double la455 = pars[104];
	double la500 = pars[105];
	double la501 = pars[106];
	double la502 = pars[107];
	double la503 = pars[108];
	double la504 = pars[109];
	double la505 = pars[110];
	double la511 = pars[111];
	double la512 = pars[112];
	double la513 = pars[113];
	double la514 = pars[114];
	double la515 = pars[115];
	double la522 = pars[116];
	double la523 = pars[117];
	double la524 = pars[118];
	double la525 = pars[119];
	double la533 = pars[120];
	double la534 = pars[121];
	double la535 = pars[122];
	double la544 = pars[123];
	double la545 = pars[124];
	double la555 = pars[125];
	double mu0 = pars[126];
	double mu1 = pars[127];
	double mu2 = pars[128];
	double mu3 = pars[129];
	double mu4 = pars[130];
	double mu5 = pars[131];
	double q01 = pars[132];
	double q02 = pars[133];
	double q03 = pars[134];
	double q04 = pars[135];
	double q05 = pars[136];
	double q10 = pars[137];
	double q12 = pars[138];
	double q13 = pars[139];
	double q14 = pars[140];
	double q15 = pars[141];
	double q20 = pars[142];
	double q21 = pars[143];
	double q23 = pars[144];
	double q24 = pars[145];
	double q25 = pars[146];
	double q30 = pars[147];
	double q31 = pars[148];
	double q32 = pars[149];
	double q34 = pars[150];
	double q35 = pars[151];
	double q40 = pars[152];
	double q41 = pars[153];
	double q42 = pars[154];
	double q43 = pars[155];
	double q45 = pars[156];
	double q50 = pars[157];
	double q51 = pars[158];
	double q52 = pars[159];
	double q53 = pars[160];
	double q54 = pars[161];
	
	ydot[0] = pow(E0,2)*la000 + pow(E1,2)*la011 + pow(E2,2)*la022 + E2*E3*la023 + E2*E4*la024 + E2*E5*la025 + pow(E3,2)*la033 + E3*E4*la034 + E3*E5*la035 + pow(E4,2)*la044 + E4*E5*la045 + pow(E5,2)*la055 + mu0 + E1*(E2*la012 + E3*la013 + E4*la014 + E5*la015 + q01) + E2*q02 + E3*q03 + E4*q04 + E5*q05 - E0*(la000 + la001 - E1*la001 + la002 - E2*la002 + la003 - E3*la003 + la004 - E4*la004 + la005 - E5*la005 + la011 + la012 + la013 + la014 + la015 + la022 + la023 + la024 + la025 + la033 + la034 + la035 + la044 + la045 + la055 + mu0 + q01 + q02 + q03 + q04 + q05);
	ydot[1] = pow(E0,2)*la100 + pow(E1,2)*la111 + pow(E2,2)*la122 + E2*E3*la123 + E2*E4*la124 + E2*E5*la125 + pow(E3,2)*la133 + E3*E4*la134 + E3*E5*la135 + pow(E4,2)*la144 + E4*E5*la145 + pow(E5,2)*la155 + mu1 + E0*(E1*la101 + E2*la102 + E3*la103 + E4*la104 + E5*la105 + q10) + E2*q12 + E3*q13 + E4*q14 + E5*q15 - E1*(la100 + la101 + la102 + la103 + la104 + la105 + la111 + la112 - E2*la112 + la113 - E3*la113 + la114 - E4*la114 + la115 - E5*la115 + la122 + la123 + la124 + la125 + la133 + la134 + la135 + la144 + la145 + la155 + mu1 + q10 + q12 + q13 + q14 + q15);
	ydot[2] = pow(E0,2)*la200 + pow(E1,2)*la211 + E1*E3*la213 + E1*E4*la214 + E1*E5*la215 + pow(E2,2)*la222 + pow(E3,2)*la233 + E3*E4*la234 + E3*E5*la235 + pow(E4,2)*la244 + E4*E5*la245 + pow(E5,2)*la255 + mu2 + E0*(E1*la201 + E2*la202 + E3*la203 + E4*la204 + E5*la205 + q20) + E1*q21 + E3*q23 + E4*q24 + E5*q25 - E2*(la200 + la201 + la202 + la203 + la204 + la205 + la211 + la212 - E1*la212 + la213 + la214 + la215 + la222 + la223 - E3*la223 + la224 - E4*la224 + la225 - E5*la225 + la233 + la234 + la235 + la244 + la245 + la255 + mu2 + q20 + q21 + q23 + q24 + q25);
	ydot[3] = pow(E0,2)*la300 + pow(E1,2)*la311 + E1*E2*la312 + E1*E4*la314 + E1*E5*la315 + pow(E2,2)*la322 + E2*E4*la324 + E2*E5*la325 + pow(E3,2)*la333 + pow(E4,2)*la344 + E4*E5*la345 + pow(E5,2)*la355 + mu3 + E0*(E1*la301 + E2*la302 + E3*la303 + E4*la304 + E5*la305 + q30) + E1*q31 + E2*q32 + E4*q34 + E5*q35 - E3*(la300 + la301 + la302 + la303 + la304 + la305 + la311 + la312 + la313 - E1*la313 + la314 + la315 + la322 + la323 - E2*la323 + la324 + la325 + la333 + la334 - E4*la334 + la335 - E5*la335 + la344 + la345 + la355 + mu3 + q30 + q31 + q32 + q34 + q35);
	ydot[4] = pow(E0,2)*la400 + pow(E1,2)*la411 + E1*E2*la412 + E1*E3*la413 + E1*E5*la415 + pow(E2,2)*la422 + E2*E3*la423 + E2*E5*la425 + pow(E3,2)*la433 + E3*E5*la435 + pow(E4,2)*la444 + pow(E5,2)*la455 + mu4 + E0*(E1*la401 + E2*la402 + E3*la403 + E4*la404 + E5*la405 + q40) + E1*q41 + E2*q42 + E3*q43 + E5*q45 - E4*(la400 + la401 + la402 + la403 + la404 + la405 + la411 + la412 + la413 + la414 - E1*la414 + la415 + la422 + la423 + la424 - E2*la424 + la425 + la433 + la434 - E3*la434 + la435 + la444 + la445 - E5*la445 + la455 + mu4 + q40 + q41 + q42 + q43 + q45);
	ydot[5] = pow(E0,2)*la500 + pow(E1,2)*la511 + E1*E2*la512 + E1*E3*la513 + E1*E4*la514 + pow(E2,2)*la522 + E2*E3*la523 + E2*E4*la524 + pow(E3,2)*la533 + E3*E4*la534 + pow(E4,2)*la544 + pow(E5,2)*la555 + mu5 + E0*(E1*la501 + E2*la502 + E3*la503 + E4*la504 + E5*la505 + q50) + E1*q51 + E2*q52 + E3*q53 + E4*q54 - E5*(la500 + la501 + la502 + la503 + la504 + la505 + la511 + la512 + la513 + la514 + la515 - E1*la515 + la522 + la523 + la524 + la525 - E2*la525 + la533 + la534 + la535 - E3*la535 + la544 + la545 - E4*la545 + la555 + mu5 + q50 + q51 + q52 + q53 + q54);
	ydot[6] = 2*D0*E0*la000 + D1*E0*la001 + D0*E1*la001 + D2*E0*la002 + D0*E2*la002 + D3*E0*la003 + D0*E3*la003 + D4*E0*la004 + D0*E4*la004 + D5*E0*la005 + D0*E5*la005 + 2*D1*E1*la011 + D2*E1*la012 + D1*E2*la012 + D3*E1*la013 + D1*E3*la013 + D4*E1*la014 + D1*E4*la014 + D5*E1*la015 + D1*E5*la015 + 2*D2*E2*la022 + D3*E2*la023 + D2*E3*la023 + D4*E2*la024 + D2*E4*la024 + D5*E2*la025 + D2*E5*la025 + 2*D3*E3*la033 + D4*E3*la034 + D3*E4*la034 + D5*E3*la035 + D3*E5*la035 + 2*D4*E4*la044 + D5*E4*la045 + D4*E5*la045 + 2*D5*E5*la055 - D0*(la000 + la001 + la002 + la003 + la004 + la005 + la011 + la012 + la013 + la014 + la015 + la022 + la023 + la024 + la025 + la033 + la034 + la035 + la044 + la045 + la055 + mu0) + D1*q01 + D2*q02 + D3*q03 + D4*q04 + D5*q05 - D0*(q01 + q02 + q03 + q04 + q05);
	ydot[7] = D2*E0*la102 + D3*E0*la103 + D4*E0*la104 + D5*E0*la105 + D2*E1*la112 + D3*E1*la113 + D4*E1*la114 + D5*E1*la115 + 2*D2*E2*la122 + D3*E2*la123 + D2*E3*la123 + D4*E2*la124 + D2*E4*la124 + D5*E2*la125 + D2*E5*la125 + 2*D3*E3*la133 + D4*E3*la134 + D3*E4*la134 + D5*E3*la135 + D3*E5*la135 + 2*D4*E4*la144 + D5*E4*la145 + D4*E5*la145 + 2*D5*E5*la155 + D0*(2*E0*la100 + E1*la101 + E2*la102 + E3*la103 + E4*la104 + E5*la105 + q10) + D2*q12 + D3*q13 + D4*q14 + D5*q15 - D1*(la100 + la101 - E0*la101 + la102 + la103 + la104 + la105 + la111 - 2*E1*la111 + la112 - E2*la112 + la113 - E3*la113 + la114 - E4*la114 + la115 - E5*la115 + la122 + la123 + la124 + la125 + la133 + la134 + la135 + la144 + la145 + la155 + mu1 + q10 + q12 + q13 + q14 + q15);
	ydot[8] = D1*E0*la201 + D3*E0*la203 + D4*E0*la204 + D5*E0*la205 + 2*D1*E1*la211 + D1*E2*la212 + D3*E1*la213 + D1*E3*la213 + D4*E1*la214 + D1*E4*la214 + D5*E1*la215 + D1*E5*la215 + D3*E2*la223 + D4*E2*la224 + D5*E2*la225 + 2*D3*E3*la233 + D4*E3*la234 + D3*E4*la234 + D5*E3*la235 + D3*E5*la235 + 2*D4*E4*la244 + D5*E4*la245 + D4*E5*la245 + 2*D5*E5*la255 + D0*(2*E0*la200 + E1*la201 + E2*la202 + E3*la203 + E4*la204 + E5*la205 + q20) + D1*q21 + D3*q23 + D4*q24 + D5*q25 - D2*(la200 + la201 + la202 - E0*la202 + la203 + la204 + la205 + la211 + la212 - E1*la212 + la213 + la214 + la215 + la222 - 2*E2*la222 + la223 - E3*la223 + la224 - E4*la224 + la225 - E5*la225 + la233 + la234 + la235 + la244 + la245 + la255 + mu2 + q20 + q21 + q23 + q24 + q25);
	ydot[9] = D1*E0*la301 + D2*E0*la302 + D4*E0*la304 + D5*E0*la305 + 2*D1*E1*la311 + D2*E1*la312 + D1*E2*la312 + D1*E3*la313 + D4*E1*la314 + D1*E4*la314 + D5*E1*la315 + D1*E5*la315 + 2*D2*E2*la322 + D2*E3*la323 + D4*E2*la324 + D2*E4*la324 + D5*E2*la325 + D2*E5*la325 + D4*E3*la334 + D5*E3*la335 + 2*D4*E4*la344 + D5*E4*la345 + D4*E5*la345 + 2*D5*E5*la355 + D0*(2*E0*la300 + E1*la301 + E2*la302 + E3*la303 + E4*la304 + E5*la305 + q30) + D1*q31 + D2*q32 + D4*q34 + D5*q35 - D3*(la300 + la301 + la302 + la303 - E0*la303 + la304 + la305 + la311 + la312 + la313 - E1*la313 + la314 + la315 + la322 + la323 - E2*la323 + la324 + la325 + la333 - 2*E3*la333 + la334 - E4*la334 + la335 - E5*la335 + la344 + la345 + la355 + mu3 + q30 + q31 + q32 + q34 + q35);
	ydot[10] = D1*E0*la401 + D2*E0*la402 + D3*E0*la403 + D5*E0*la405 + 2*D1*E1*la411 + D2*E1*la412 + D1*E2*la412 + D3*E1*la413 + D1*E3*la413 + D1*E4*la414 + D5*E1*la415 + D1*E5*la415 + 2*D2*E2*la422 + D3*E2*la423 + D2*E3*la423 + D2*E4*la424 + D5*E2*la425 + D2*E5*la425 + 2*D3*E3*la433 + D3*E4*la434 + D5*E3*la435 + D3*E5*la435 + D5*E4*la445 + 2*D5*E5*la455 + D0*(2*E0*la400 + E1*la401 + E2*la402 + E3*la403 + E4*la404 + E5*la405 + q40) + D1*q41 + D2*q42 + D3*q43 + D5*q45 - D4*(la400 + la401 + la402 + la403 + la404 - E0*la404 + la405 + la411 + la412 + la413 + la414 - E1*la414 + la415 + la422 + la423 + la424 - E2*la424 + la425 + la433 + la434 - E3*la434 + la435 + la444 - 2*E4*la444 + la445 - E5*la445 + la455 + mu4 + q40 + q41 + q42 + q43 + q45);
	ydot[11] = D1*E0*la501 + D2*E0*la502 + D3*E0*la503 + D4*E0*la504 + 2*D1*E1*la511 + D2*E1*la512 + D1*E2*la512 + D3*E1*la513 + D1*E3*la513 + D4*E1*la514 + D1*E4*la514 + D1*E5*la515 + 2*D2*E2*la522 + D3*E2*la523 + D2*E3*la523 + D4*E2*la524 + D2*E4*la524 + D2*E5*la525 + 2*D3*E3*la533 + D4*E3*la534 + D3*E4*la534 + D3*E5*la535 + 2*D4*E4*la544 + D4*E5*la545 + D0*(2*E0*la500 + E1*la501 + E2*la502 + E3*la503 + E4*la504 + E5*la505 + q50) + D1*q51 + D2*q52 + D3*q53 + D4*q54 - D5*(la500 + la501 + la502 + la503 + la504 + la505 - E0*la505 + la511 + la512 + la513 + la514 + la515 - E1*la515 + la522 + la523 + la524 + la525 - E2*la525 + la533 + la534 + la535 - E3*la535 + la544 + la545 - E4*la545 + la555 - 2*E5*la555 + mu5 + q50 + q51 + q52 + q53 + q54);
}

void derivs_hiclasse6_gslode(int neqs, double t, double *pars, const double *y, double *dydt){
	do_derivs_hiclasse6(pars, y, dydt);
}